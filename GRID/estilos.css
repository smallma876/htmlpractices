:root {
    --azul: #0071b7;
    --blanco: #FFF;
    --naranja: #ff4f1e;
}
html {
    font-size: 62.5%; /** 1REM = 10pX **/
}

body {
    background-color: var(--azul);
    font-family:  'Lato', sans-serif;
    font-size: 1.6rem;
}

.caja-curso {
    background-color: var(--naranja);
    text-align: center;
    color: var(--blanco);
    padding: 5rem;

}
.caja-curso h1 {
    margin: 0;
}
.caja-curso p {
    font-size: 2.4rem;
}
.caja-curso a {
    font-size: 2.4rem;
    padding: 2rem;
    display: inline-block;
    text-decoration: none;
    color: var(--blanco);
    padding: 0;
}


h1, h2 {
    color: var(--blanco);
    text-align: center;
    margin: 5rem 0;
}

.contenedor {
    max-width: 120rem;
    margin: 0 auto;
}
.box {
    background-color: var(--naranja);
    color: var(--blanco);
    padding: 5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 4rem;
    margin-bottom: 2rem;
}


/* 01 */

.grid-1{
    display:grid;
}

/** 2**/

.grid-2{
    display: grid;
    grid-template-columns: 300px 300px 300px;
}
.grid-2 .box:nth-child(2){
   grid-column-start: 1;
   grid-column-end: 2;

   grid-column: 1 / 2;    /* forma abreviada:indica en que columna empezara y terminara*/

}

/** 3  **/

.grid-3{
    display: grid;
    grid-template-columns: repeat(3, 1fr); /* tambien podemor conmbinar el row con el colum en un mismo bloque*/
    grid-template-rows: repeat(2, 1fr)     /* si ponemos mas filas de las necesarias, css nos dejara el espacio vacio*/ 
}
.grid-3 .box:nth-child(2){
    grid-row: 1 / 2;
}

/** 4 **/

.grid-4{
    display: grid;
    grid-template-columns: repeat(3, 1fr); 
    grid-template-rows: repeat(2, 1fr)     
}

.grid-4 .box:nth-child(2){
    background-color: cornflowerblue;
    grid-column: 2 / span 2;   /* con el span indicamos que tome 2 columnas partiendo del 2*/
    grid-row: 1 / span 2;      /* con en spab indicamos que tome 3 fila en adelante*/
}

/** 5 **/

.grid-5{
    display: grid;
    grid-template-columns: repeat(3, 1fr); 
    grid-template-rows: repeat(2, 1fr);  
    
    grid: repeat(2, 300px) / repeat(3, 300px);    /* forma abreviada primero toma los rows y luego las columnas*/
}

/** 6 **/

.grid-6{
    display: grid;
    grid: repeat(2, 300px) / repeat(3, 300px);
    grid-auto-flow: dense;              /* corrigle los saltos de linea al cambiar de posision los elemntod del grid*/
 
}

.grid-6 .box:nth-child(2){
    grid-column: 1 / 2;

}

/** 7 **/

.grid-7{
    display: grid;
    grid-template-columns: 2fr repeat(2, 1fr);    /* la primera columna tomara 2 fr, y la segunda y tercera 1 fr*/
    /*grid:repeat(2, 1fr) / repeat(3, 1fr)    2 rows de una fracion y 3 columnas de 1 fr)*/
}

/** 8 **/ 

.grid-8{
    display: grid;
    grid: repeat(2, 200px) / repeat(3,1fr);
    column-gap: 10px;
    row-gap: 10px;
    /*gap: 10px 50px      row y colum*/

}

.grid-8 .box{
    margin:0
}

/** 9 **/ 

.grid-9{
    display: grid;
    height: 1200px;
    /*permite definir la estructura de un grid mediante la asignación de
     nombres a áreas específicas dentro de ese grid,se usa con la propiedad 
     grid-template-columns y grid-template-rows*/

    grid-template-areas: "header header header"          /* tomara las 3 columnas para el header*/
                         "nav nav nav"                   /* tomara las 3 columnas para el nav*/
                         "contenido contenido sidebar"   /* 2 columnas para el contenido y 1 uno para el sidebar*/
                         "footer footer footer";         /* 3 columnas para el footer*/
           
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: 3fr 1fr 6fr 2.5fr;
    gap: 40px;
    
}

.grid-9 .box{
    margin:0;
}

.grid-9 .box:nth-child(1){
    grid-area: header;    /* tomara las 3 columas que se indico al inicio*/

}
.grid-9 .box:nth-child(2){
    grid-area: nav;       /* tomara las 3 columnas asignadas al nav*/
}

.grid-9 .box:nth-child(3){
    grid-area:contenido;  /* tomara las 2 columnas asignadas*/
}

.grid-9 .box:nth-child(4){
    grid-area: sidebar;
}

.grid-9 .box:nth-child(5){
    grid-area: footer;
}

/** 10 **/

.grid-10{
    display: grid;
    height: 1200px;

    grid-template: "header header header" 2.5fr         
                    "nav nav nav" 1fr                  
                    "contenido contenido sidebar" 6fr   
                    "footer footer footer" 2.5fr / 1fr 1fr 1fr;         
           
    gap: 40px;
}

.grid-10 .box{
    margin:0;
}

.grid-10 .box:nth-child(1){
    grid-area: header;    /* tomara las 3 columas que se indico al inicio*/

}
.grid-10 .box:nth-child(2){
    grid-area: nav;       /* tomara las 3 columnas asignadas al nav*/
}

.grid-10 .box:nth-child(3){
    grid-area:contenido;  /* tomara las 2 columnas asignadas*/
}

.grid-10 .box:nth-child(4){
    grid-area: sidebar;
}

.grid-10 .box:nth-child(5){
    grid-area: footer;
}

/** 11 **/

.grid-11{
     display: grid;
     grid-template-columns: repeat(6, 1fr);
     height: 300px;                              /* define el ancho de la columna*/
     place-content: end;                         /* alinea igual que align-items o align content en vertical*/
}

/** 12 **/

.grid-12{
    display: grid;
    grid-template-columns: repeat( auto-fill, 200px);   /* genera mas columnas mientras haya mas espacio en el contenedor */
    grid-template-columns: repeat( auto-fit , 200px);   /* genera solo las columnas necesraias sim tener que especificarlos segun el contenido, ninguna de las dos funciona con fracciones*/

    grid-template-columns: repeat( auto-fit, minmax( 200px, 1fr) );   /* minmax toma un valor minimo y maximo "200 px es el valor minimo y cuando sea menor de ese valor tomara el valor maximo en una siguiente linea*/
}